{"version":3,"sources":["components/Section.js","components/Games.js","data/data.js","components/Counters.js","components/Profile.js","components/ChartDamage.js","components/ChartCs.js","App.js","reportWebVitals.js","index.js"],"names":["Section","props","children","className","Game","game","Color","result","champion","enemy","damage","cs","kills","death","assist","CountKDA","deaths","assists","Games","games","map","g","id","kda","getal","Math","round","GAMES","PROFILE","nameUser","lp","rank","Counters","useState","dodgeCounter","setDodgeCounter","onClick","Profile","profile","ChartDamage","Accordion","Item","eventKey","Header","Body","BarChart","width","height","data","XAxis","dataKey","label","value","position","offset","scale","YAxis","angle","Tooltip","Bar","barSize","fill","ChartCs","App","Container","Row","Col","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698878c1.chunk.js","sourcesContent":["export function Section(props){\r\n    const {children} = props;\r\n\r\n    return <div className=\"section\">\r\n        {children}\r\n    </div>\r\n}","import {Section} from \"./Section\";\r\n\r\nexport function Game(props) {\r\n    const {game} = props;\r\n    return <Section>\r\n        <Color result={game.result}/>\r\n        <strong>{game.champion}</strong> vs {game.enemy}\r\n        <br/>\r\n        <strong>Damage dealt:</strong> {game.damage}\r\n        &emsp;\r\n        <strong>CS:</strong> {game.cs}\r\n        &emsp;\r\n        <strong>Kills:</strong> {game.kills}\r\n        &emsp;\r\n        <strong>Deaths:</strong> {game.death}\r\n        &emsp;\r\n        <strong>Assists:</strong> {game.assist}\r\n        &emsp;\r\n        <strong>KDA:</strong> <CountKDA kills={game.kills} deaths={game.death} assists={game.assist}/>\r\n    </Section>\r\n}\r\n\r\nexport function Games(props) {\r\n    const {games} = props;\r\n\r\n    return <div>\r\n        {games.map(g => <Game key={g.id} game={g}/>)}\r\n    </div>;\r\n}\r\n\r\nfunction Color(props) {\r\n    const {result} = props;\r\n\r\n    if (result === \"WIN\") {\r\n        return <h3 className=\"win\">{result}</h3>\r\n\r\n    }\r\n    if (result === \"LOSE\") {\r\n        return <h3 className=\"lose\">{result}</h3>\r\n    }\r\n    else return null;\r\n}\r\n\r\nfunction CountKDA(props) {\r\n    const {kills, deaths, assists} = props;\r\n    let kda;\r\n    if (deaths === 0) {\r\n        kda = \"Perfect KDA\"\r\n    } else {\r\n        kda = afronden((kills + assists) / deaths);\r\n    }\r\n\r\n\r\n    function afronden(getal) {\r\n        return Math.round(getal * 10) / 10\r\n    }\r\n\r\n    return kda\r\n}","export const GAMES = [\r\n    {\r\n        id: \"1\",\r\n        champion: \"Ezreal\",\r\n        enemy: \"Ashe\",\r\n        damage: 10423,\r\n        cs: 123,\r\n        result: \"WIN\",\r\n        kills: 5,\r\n        assist: 1,\r\n        death: 2\r\n    },\r\n    {\r\n        id: \"2\",\r\n        champion: \"Miss fortune\",\r\n        enemy: \"Ezreal\",\r\n        damage: 5214,\r\n        cs: 98,\r\n        result: \"LOSE\",\r\n        kills: 2,\r\n        assist: 2,\r\n        death: 6\r\n    },\r\n\r\n    {\r\n        id: \"3\",\r\n        champion: \"Miss fortune\",\r\n        enemy: \"Ezreal\",\r\n        damage: 5214,\r\n        cs: 98,\r\n        result: \"WIN\",\r\n        kills: 2,\r\n        assist: 2,\r\n        death: 0\r\n    },\r\n];\r\n\r\nexport const PROFILE =\r\n    {\r\n        nameUser: \"mborrema\",\r\n        lp: 55,\r\n        rank: \"BRONZE 4\"\r\n    }\r\n","import React, {useState} from \"react\";\r\n\r\nexport function Counters(props){\r\n    const [dodgeCounter, setDodgeCounter] = useState(0);\r\n\r\n    return <div>\r\n        <strong>dodges:</strong> {dodgeCounter}\r\n        &emsp;\r\n        <button onClick={() => setDodgeCounter(dodgeCounter-1)}>-</button>\r\n        &ensp;\r\n        <button onClick={() => setDodgeCounter(dodgeCounter+1)}>+</button>\r\n    </div>\r\n}","import {Section} from \"./Section\";\r\nimport {Counters} from \"./Counters\";\r\n\r\nexport function Profile(props){\r\n    const {profile} = props;\r\n\r\n    return <Section>\r\n        <strong>Username:</strong> {profile.nameUser}\r\n        &emsp;\r\n        <strong>League Points:</strong> {profile.lp} lp\r\n        &emsp;\r\n        <strong>Rank:</strong> {profile.rank}\r\n        &emsp;\r\n        <Counters/>\r\n    </Section>\r\n}","import { BarChart, Bar, XAxis, YAxis, Tooltip} from 'recharts';\r\nimport {Accordion} from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport function ChartDamage(props){\r\n    const data = [\r\n        {\r\n            id: '1',\r\n            damage: 10512,\r\n        },\r\n        {\r\n            id: '2',\r\n            damage: 2500,\r\n        }\r\n    ];\r\n\r\n    return <Accordion.Item eventKey=\"1\">\r\n        <Accordion.Header>Damage chart</Accordion.Header>\r\n        <Accordion.Body>\r\n            <div id=\"example-collapse-text\">\r\n                <BarChart width={400} height={200} data={data}>\r\n                    <XAxis dataKey=\"id\"  label={{ value: 'Games', position: 'insideBottomRight', offset: 0 }} scale=\"band\" />\r\n                    <YAxis label={{ value: 'Damage', angle: -90, position: 'insideLeft' }}/>\r\n                    <Tooltip/>\r\n                    <Bar dataKey=\"damage\" barSize={30} fill=\"#3D405B\"/>\r\n                </BarChart>\r\n            </div>\r\n        </Accordion.Body>\r\n    </Accordion.Item>\r\n\r\n}\r\n\r\n","import {BarChart, Bar, XAxis, YAxis, Tooltip} from 'recharts';\r\nimport {Accordion} from \"react-bootstrap\";\r\n\r\n\r\nexport function ChartCs(props) {\r\n    const data = [\r\n        {\r\n            id: '1',\r\n            cs: 103,\r\n        },\r\n        {\r\n            id: '2',\r\n            cs: 78,\r\n        }\r\n    ];\r\n\r\n    return <Accordion.Item eventKey=\"0\">\r\n        <Accordion.Header>Cs chart</Accordion.Header>\r\n        <Accordion.Body>\r\n            <div id=\"example-collapse-text\">\r\n                <BarChart width={400} height={200} data={data}>\r\n                    <XAxis dataKey=\"id\" label={{value: 'Games', position: 'insideBottomRight', offset: 0}}\r\n                           scale=\"band\"/>\r\n                    <YAxis label={{value: 'Cs', angle: -90, position: 'insideLeft'}}/>\r\n                    <Tooltip/>\r\n                    <Bar dataKey=\"cs\" barSize={30} fill=\"#3D405B\"/>\r\n                </BarChart>\r\n            </div>\r\n        </Accordion.Body>\r\n    </Accordion.Item>\r\n\r\n}\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Games} from \"./components/Games\";\nimport {GAMES} from \"./data/data\";\nimport {PROFILE} from \"./data/data\";\nimport {Profile} from \"./components/Profile\";\nimport {Accordion, Col, Container, Row} from \"react-bootstrap\";\n\nimport {ChartDamage} from \"./components/ChartDamage\";\nimport {ChartCs} from \"./components/ChartCs\";\nimport {Section} from \"./components/Section\";\n\nfunction App() {\n  return (\n      <Container>\n        <h1>LEAGUE OF LEGENDS</h1>\n          <Row>\n              <Col>\n                  <Profile profile={PROFILE}/>\n              </Col>\n          </Row>\n          <Row>\n              <Col xs={6}>\n                  <Games games={GAMES}/>\n              </Col>\n              <Col>\n                  <Section>\n                      <Accordion>\n                          <ChartDamage/>\n                          <ChartCs/>\n                      </Accordion>\n                  </Section>\n              </Col>\n\n\n          </Row>\n      </Container>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}